# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 - 2021, Apache Software Foundation
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# juzi, 2021
# HLearning, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm 0.8.dev1734+gca660ba1e\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-12 10:06+0000\n"
"PO-Revision-Date: 2021-10-13 01:32+0000\n"
"Last-Translator: HLearning, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/TVMChinese/teams/124815/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:4
msgid ""
"Click :ref:`here "
"<sphx_glr_download_how_to_deploy_models_deploy_ssd_gluoncv.py>` to download "
"the full example code"
msgstr ""
"点击 :ref:`这里 <sphx_glr_download_how_to_deploy_models_deploy_ssd_gluoncv.py>` "
"下载完整的样例代码"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:11
msgid "Deploy Single Shot Multibox Detector(SSD) model"
msgstr "部署Single Shot Multibox Detector(SSD)模型"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:12
msgid ""
"**Author**: `Yao Wang <https://github.com/kevinthesun>`_ `Leyuan Wang "
"<https://github.com/Laurawly>`_"
msgstr ""
"**作者**: `Yao Wang <https://github.com/kevinthesun>`_ `Leyuan Wang "
"<https://github.com/Laurawly>`_"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:15
msgid ""
"This article is an introductory tutorial to deploy SSD models with TVM. We "
"will use GluonCV pre-trained SSD model and convert it to Relay IR"
msgstr "本文是使用TVM部署SSD模型的入门教程。我们将使用GluonCV预先训练的SSD模型，并将其转换为Relay IR"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:37
#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:132
msgid "Out:"
msgstr "输出:"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:47
msgid "Preliminary and Set parameters"
msgstr "初步设定参数"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:50
msgid "We support compiling SSD on both CPUs and GPUs now."
msgstr "我们现在支持在CPU和GPU上编译 SSD。"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:52
msgid ""
"To get best inference performance on CPU, change target argument according "
"to your device and follow the :ref:`tune_relay_x86` to tune x86 CPU and "
":ref:`tune_relay_arm` for arm CPU."
msgstr ""
"要在CPU上获得最佳推理性能，请根据您的设备更改目标参数，并按照:ref:`tune_relay_x86` to tune x86 CPU and "
":ref:`tune_relay_arm`调整arm CPU。"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:57
msgid ""
"To get best inference performance on Intel graphics, change target argument "
"to :code:`opencl -device=intel_graphics`. But when using Intel graphics on "
"Mac, target needs to be set to `opencl` only for the reason that Intel "
"subgroup extension is not supported on Mac."
msgstr ""
"要在Intel graphics上获得最佳推理性能，请将目标参数更改为:code:`opencl "
"-device=intel_graphics`。但在Mac上使用Intel "
"graphics时，target需要设置为`opencl`，这只是因为Mac上不支持Intel subgroup extension。"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:63
msgid ""
"To get best inference performance on CUDA-based GPUs, change the target "
"argument to :code:`cuda`; and for OPENCL-based GPUs, change target argument "
"to :code:`opencl` followed by device argument according to your device."
msgstr ""
"要在基于CUDA的GPU上获得最佳推理性能，请将目标参数更改为 "
":code:`cuda`；对于基于OPENCL的GPU，根据您的设备，将目标参数更改为:code:`opencl`后跟设备参数。"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:91
msgid "Download and pre-process demo image"
msgstr "下载并预处理演示图像"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:110
msgid "Convert and compile model for CPU."
msgstr "转换和编译CPU模型。"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:142
msgid "Create TVM runtime and do inference .. note::"
msgstr "创建TVM运行时间并做推论.. 注意::"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:177
msgid "Display result"
msgstr "显示结果"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:203
msgid "**Total running time of the script:** ( 2 minutes  31.833 seconds)"
msgstr "**脚本总运行时间:** ( 2 minutes  31.833 seconds)"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:218
msgid ""
":download:`Download Python source code: deploy_ssd_gluoncv.py "
"<deploy_ssd_gluoncv.py>`"
msgstr ""
":download:`下载Python源代码: deploy_ssd_gluoncv.py <deploy_ssd_gluoncv.py>`"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:224
msgid ""
":download:`Download Jupyter notebook: deploy_ssd_gluoncv.ipynb "
"<deploy_ssd_gluoncv.ipynb>`"
msgstr ""
":download:`下载Jupyter notebook: deploy_ssd_gluoncv.ipynb "
"<deploy_ssd_gluoncv.ipynb>`"

#: ../../_staging/how_to/deploy_models/deploy_ssd_gluoncv.rst:231
msgid ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
