# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020 - 2021, Apache Software Foundation
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# HLearning, 2021
# juzi, 2021
# Jin Wang, 2021
# DH Luo, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm 0.8.dev1734+gca660ba1e\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-12 10:06+0000\n"
"PO-Revision-Date: 2021-10-13 01:34+0000\n"
"Last-Translator: DH Luo, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/TVMChinese/teams/124815/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:4
msgid ""
"Click :ref:`here "
"<sphx_glr_download_how_to_tune_with_autotvm_tune_relay_x86.py>` to download "
"the full example code"
msgstr ""
"点击 :ref:`此处 <sphx_glr_download_how_to_tune_with_autotvm_tune_relay_x86.py>` "
"获取完整示例代码"

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:13
msgid "Auto-tuning a Convolutional Network for x86 CPU"
msgstr "为x86CPU 自动调优一个卷积网络"

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:14
msgid ""
"**Author**: `Yao Wang <https://github.com/kevinthesun>`_, `Eddie Yan "
"<https://github.com/eqy>`_"
msgstr ""
"**作者**: `Yao Wang <https://github.com/kevinthesun>`_, `Eddie Yan "
"<https://github.com/eqy>`_"

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:16
msgid ""
"This is a tutorial about how to tune convolution neural network for x86 CPU."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:19
msgid ""
"Note that this tutorial will not run on Windows or recent versions of macOS."
" To get it to run, you will need to wrap the body of this tutorial in a "
":code:`if __name__ == \"__main__\":` block."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:43
msgid "Define network"
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:44
msgid ""
"First we need to define the network in relay frontend API. We can either "
"load some pre-defined network from :code:`relay.testing` or building "
":any:`relay.testing.resnet` with relay. We can also load models from MXNet, "
"ONNX and TensorFlow."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:49
msgid "In this tutorial, we choose resnet-18 as tuning example."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:127
msgid "Configure tensor tuning settings and create tasks"
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:128
msgid ""
"To get better kernel execution performance on x86 CPU, we need to change "
"data layout of convolution kernel from \"NCHW\" to \"NCHWc\". To deal with "
"this situation, we define conv2d_NCHWc operator in topi. We will tune this "
"operator instead of plain conv2d."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:134
msgid ""
"We will use local mode for tuning configuration. RPC tracker mode can be "
"setup similarly to the approach in :ref:`tune_relay_arm` tutorial."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:138
msgid ""
"To perform a precise measurement, we should repeat the measurement several "
"times and use the average of results. In addition, we need to flush the "
"cache for the weight tensors between repeated measurements. This can make "
"the measured latency of one operator closer to its actual latency during "
"end-to-end inference."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:212
msgid ""
"Finally, we launch tuning jobs and evaluate the end-to-end performance."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:279
msgid "Sample Output"
msgstr "样本输出"

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:280
msgid ""
"The tuning needs to compile many programs and extract feature from them. So "
"a high performance CPU is recommended. One sample output is listed below."
msgstr ""

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:340
msgid ""
":download:`Download Python source code: tune_relay_x86.py "
"<tune_relay_x86.py>`"
msgstr ":download:`Python 源码下载: tune_relay_x86.py <tune_relay_x86.py>`"

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:346
msgid ""
":download:`Download Jupyter notebook: tune_relay_x86.ipynb "
"<tune_relay_x86.ipynb>`"
msgstr ""
":download:`Jupyter notebook 下载: tune_relay_x86.ipynb <tune_relay_x86.ipynb>`"

#: ../../_staging/how_to/tune_with_autotvm/tune_relay_x86.rst:353
msgid ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
